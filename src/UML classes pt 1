// Diagram in UML Notation with Polymorphism and Inheritance
@startuml

package "entidades" {
  abstract class Pessoa {
    - String nome
    - String cpf
    - LocalDate dataNascimento
    - List<Consulta> historicoConsultas
    - List<Exame> historicoExames
    - List<Pagamento> pagamentos
    + Pessoa(String nome, String cpf, LocalDate dataNascimento)
    + getNome(): String
    + getCpf(): String
    + getDataNascimento(): LocalDate
  
  }

  class Paciente extends Pessoa {
    + Paciente(String nome, String cpf, LocalDate dataNascimento)
    + getHistoricoConsultas(): List<Consulta>
    + getHistoricoExames(): List<Exame>
  }

  class Medico extends Pessoa {
    - String crm
    - String especialidade
    + Medico(String nome, String cpf, LocalDate dataNascimento, String crm, String especialidade)
    + verificarDisponibilidade(LocalDate data, LocalTime horario): boolean
    + verificarEspecialidade(String especialidadeRequerida): boolean
    + getHistoricoConsultasAtendidas(): List<Consulta>
  }

  class Consulta {
    - LocalDate dataConsulta
    - LocalTime horarioInicio
    - int duracaoMinutos
    - String statusConsulta
    - Paciente paciente
    - Medico medico
    - List<Exame> examesPrescritos
    - List<String> medicamentosPrescritos
    - double valorConsulta
    + Consulta(LocalDate dataConsulta, LocalTime horarioInicio, int duracaoMinutos, Paciente paciente, Medico medico)
    + prescreverExame(Exame exame): void
    + prescreverMedicamento(String medicamento): void
  }

  class Exame {
    - String tipo
    - LocalDate dataPrescricao
    - LocalDate dataRealizacao
    - String resultado
    - double custo
    + Exame(String tipo, LocalDate dataPrescricao, double custo)
  }

  class Prescricao {
    - Consulta consultaAssociada
    - List<Exame> examesPrescritos
    - List<String> medicamentos
    - LocalDate dataValidade
    + Prescricao(Consulta consultaAssociada, List<Exame> examesPrescritos, List<String> medicamentos, LocalDate dataValidade)
    + getConsultaAssociada(): Consulta
    + getExamesPrescritos(): List<Exame>
    + getMedicamentos(): List<String>
    + getDataValidade(): LocalDate
  }

  class Pagamento {
    - double valor
    - boolean pendente
    + Pagamento(double valor)
    + realizarPagamento(): void
  }

  class Notificacao {
    - String mensagem
    - LocalDate dataEnvio
    + Notificacao(String mensagem, LocalDate dataEnvio)
  }
}

package "servicos" {
  class AgendamentoService {
    - consultas: List<Consulta>
    + agendarConsulta(Consulta consulta): void
    +getConsultasPorPessoa(pessoa: Pessoa): List<Consulta>
    +mostrarHistoricoConsultas(pessoa: Pessoa): void
    *+ verificarDisponibilidade(Medico medico, LocalDate data, LocalTime horario): boolean
    *+ validarConsulta(Paciente paciente, Medico medico, LocalDate dataConsulta, LocalTime horario, String especialidade): void
  }

  class PagamentoService {
    + verificarPendencias(Pessoa pessoa): boolean
    + registrarPagamento(Pagamento pagamento): void
  }
}

package "excecoes" {
  class HorarioIndisponivelException extends Exception {}
  class PagamentoPendenteException extends Exception {}
  class EspecialidadeInvalidaException extends Exception {}
}

Pessoa <|-- Paciente
Pessoa <|-- Medico
Pessoa "1" --> "*" Consulta
Pessoa "1" --> "*" Exame
Pessoa "1" --> "*" Pagamento
Consulta "1" --> "*" Exame
Consulta "1" --> "1" Prescricao

@enduml
